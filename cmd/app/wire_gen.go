// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"log/slog"
	"oltp/biz"
	"oltp/conf"
	"oltp/data"
	"oltp/server"
	"oltp/server/middleware"
	"oltp/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, confData *conf.Data, logger slog.Logger) (*app, func(), error) {
	db := data.NewSQLX(confData)
	dataData, cleanup, err := data.NewData(db)
	if err != nil {
		return nil, nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData, logger)
	greeterUsecase := biz.NewGreeterUsecase(greeterRepo, logger)
	greeter := service.NewGreeterService(greeterUsecase)
	defaultCodec := middleware.NewDefaultCodec()
	ipWhitelist := middleware.NewIpWhitelist()
	httpServer := server.NewHTTPServer(confServer, greeter, defaultCodec, ipWhitelist)
	mainApp := newApp(httpServer)
	return mainApp, func() {
		cleanup()
	}, nil
}
